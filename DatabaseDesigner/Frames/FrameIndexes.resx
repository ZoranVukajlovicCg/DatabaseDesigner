<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>337, 17</value>
  </metadata>
  <metadata name="il.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>405, 17</value>
  </metadata>
  <data name="il.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADc
        CAAAAk1TRnQBSQFMAgEBBAEAAWABAAFgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8APQAB/wMAAf8DAAH/
        AwAB/ygAAyABLQNOAZQDWQHXAyQB+AMkAfgDWAHWA00BkwMfASwsAANCAXUDSgGKNwAB/wMAAf8DAAH/
        AwAB/zMAAf8DAAH/AwAB/wMAAf8gAAMGAQgDTgGVAwIB/gMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMO
        Af0DTQGSAwUBBiAAA0MBdwMAAf8DAAH/A0kBiDMAAf8DAAH/AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/
        HAADBgEHA1gBvQMAAf8DLgH3A0sBjQMjATIDBgQHAQkDJAE0A0wBkAMkAfgDAAH/A1gBuwMFAQYYAANE
        AXkDAAH/AwAB/wMAAf8DAAH/A0kBhi8AAf8DAAH/AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/HAADTgGV
        AwAB/wMAAf8DWgHSAw4BEhQAAyABLQNYAeMDAAH/A00BkhQAA0QBewMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wNIAYQrAAH/AwAB/wMAAf8DAAH/MwAB/wMAAf8DAAH/AwAB/xgAAyABLgMCAf4DLgH2A1sB1AMA
        Af8DWwHOAw4BEhQAAyABLQMkAfgDDgH9Ax8BLAwAA0YBfQMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/A0cBgicAAf8DAAH/AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/GAADTgGWAwAB/wNKAYkDDwET
        A1sB0AMAAf8DWwHOAw4BEhQAA0wBkAMAAf8DTQGTCAADRgF/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wNGAYEjAAH/AwAB/wMAAf8DAAH/GwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNYAdkDAAH/AyABLQQAAw8BEwNb
        AdADAAH/A1sBzgMOARIQAAMkATQDAAH/A1gB1hsAAf8DAAH/AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/
        GwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMeAfkDAgH+AwIBAwgAAw8BEwNbAdADAAH/A1sBzgMOARIMAAMHAQkDAAH/AyQB+BsAAf8DAAH/
        AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/GwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMeAfkDAAH/AwMBBAwAAw8BEwNbAdADAAH/A1sBzgMO
        ARIIAAMGAQcDAAH/AyQB+BsAAf8DAAH/AwAB/wMAAf8zAAH/AwAB/wMAAf8DAAH/GwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNYAdkDAAH/
        AyABLRAAAw8BEwNbAdADAAH/A1sBzgMOARIEAAMjATIDAAH/A1kB1xsAAf8DAAH/AwAB/wMAAf8zAAH/
        AwAB/wMAAf8DAAH/MwAB/wMAAf8DAAH/AwAB/xgAA04BlwMAAf8DSQGIFAADDwETA1sB0AMAAf8DWwHO
        Aw4BEgNLAY0DAAH/A04BlBsAAf8DAAH/AwAB/wMAAf8gAANGAYEDAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/A0YBfyMAAf8DAAH/AwAB/wMAAf8YAAMhAS8DAgH+AzAB9QMcAScUAAMP
        ARMDWwHQAwAB/wNaAdIDLgH3AwIB/gMgAS0bAAH/AwAB/wMAAf8DAAH/JAADSAGEAwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DRQF8JwAB/wMAAf8DAAH/AwAB/xwAA08BmQMAAf8DWgHgAx0BKBQA
        Aw8BEwNbAdQDAAH/AwAB/wNOAZUfAAH/AwAB/wMAAf8DAAH/KAADSQGHAwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/A0QBeSsAAf8DAAH/AwAB/wMAAf8cAAMGAQgDWQG/AwAB/wMuAfYDSgGLAyIBMQMGAQcDBAEF
        AyEBMANKAYoDLgH2AwAB/wNYAb0DBgEIHwAB/wMAAf8DAAH/AwAB/ywAA0oBiQMAAf8DAAH/AwAB/wMA
        Af8DQwF3LwAB/wMAAf8DAAH/AwAB/yAAAwYBCANPAZkDAgH+AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwIB/gNOAZUDBgEHIwAB/wMAAf8DAAH/AwAB/zAAA0sBjAMAAf8DAAH/A0IBdDMAAf8DAAH/AwAB/wMA
        Af8oAAMhAS8DTgGXA1gB2QMeAfkDHgH5A1gB2QNOAZYDIAEuKwAB/wMAAf8DAAH/AwAB/zQAA0wBjgNA
        AXEcAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAB/AE/AfABDwH+AX8B/AE/
        AfwBPwHAAQMB/AE/AfwBPwH8AT8BgAEBAfgBHwH8AT8B/AE/AYMB4QHwAQ8B/AE/AfwBPwEBAfAB4AEH
        AfwBPwH8AT8BAAH4AcABAwH8AT8CAAEQAXgB/AE/AfwBPwIAARgBOAH8AT8B/AE/AgABHAEYAfwBPwH8
        AT8CAAEeAQgB/AE/AfwBPwH8AT8BHwEAAfwBPwHAAQMB/AE/AQ8BgAH8AT8B4AEHAfwBPwGHAcEB/AE/
        AfABDwH8AT8BgAEBAfwBPwH4AR8B/AE/AcABAwH8AT8B/AE/AfwBPwHwAQ8B/AE/Af4Bfws=
</value>
  </data>
</root>